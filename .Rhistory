})
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
output$plot1city <- renderPlot({city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
})
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
runApp()
runApp()
shinyApp(ui = ui, server = server)
runApp()
runApp()
>
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
city_mpg_plot
# Create a graph of City MPG
city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
# Create a graph of Highway MPG
highway_mpg_plot <- ggplot(data = highway_mpg, aes(x = reorder(highway_mpg$make, highway_mpg$`Average Highway MPG`),
y = highway_mpg$`Average Highway MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(highway_mpg$`Average Highway MPG`, 1), hjust = -0.2)) +
labs(title = "Average Highway MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon on Highway") +
coord_flip() +
theme_minimal()
city_mpg_plot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library('dplyr')
library('stringr')
library("ggplot2")
test_df <- read.csv(unz("data/filtered_datasets.zip", "filtered_datasets/test_filtered_2009_present.csv"))
test_df$Represented.Test.Vehicle.Make <- str_to_upper(test_df$Represented.Test.Vehicle.Make)
filter_test_df <- test_df %>%
select(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model, Emission.Name, Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(Rounded.Emission.Result..g.mi., na.rm = TRUE))
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
# filter(num > 20) %>%
arrange(-avg_emission)
# head(10)
select_list <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
arrange(-avg_emission) %>%
pull(Represented.Test.Vehicle.Make)
ggplot(data = summary_info) +
geom_col(mapping = aes(x = reorder(Represented.Test.Vehicle.Make, avg_emission), y = avg_emission)) +
coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
library("rio")
library("xlsx")
library("dplyr")
library("readxl")
# original data sets
vehicles_data <- read.csv(unz("data/original_datasets.zip", "original_datasets/vehicles.csv"))
test_results_2014_present <- read_excel("data/original_datasets.zip")
# filter out the columns that we do not need for our analysis
test_filtered_2014_present <- test_results_2014_present %>%
select(
-`Certified Test Group`, -`Certified Evaporative Family`, -`Vehicle ID`, -`Vehicle Configuration Number`,
-`Displacement (L)`, -`Gross Vehicle Weight Rating (lbs.)`, -`Test Drive`, -`Test Drive Description`,
-`Transmission Type`, -`Transmission Type Description`, -`Transmission type, if other`, -`Number of Gears`,
-`Transmission Lockup Yes/No?`, -`Creeper Gear Yes/No?`, -`Equivalent Test Weight (lbs.)`,
-`Vehicle Fuel Category`, -`Vehicle Fuel Category Description`, -`Test Number`, -`Test Procedure`,
-`Test Fuel`, -`Certification/In-Use Code`, -`Vehicle Class`, -`Certification Region`,
-`Emission Standard Level Code`, -`Upward Diesel Adjustment Factor`, -`Downward Diesel Adjustment Factor`,
-`Reactivity Factor (RAF)`
)
test_results_2009_2013 <- import("data/light-duty-vehicle-test-results-report-2009-2013.xlsx")
test_filtered_2009_2013 <- test_results_2009_2013 %>%
select(
-`Certified Test Group`, -`Certified Evaporative Family`, -`Vehicle ID`, -`Vehicle Configuration Number`,
-`Displacement (L)`, -`Gross Vehicle Weight Rating (lbs.)`, -`Test Drive`, -`Test Drive Description`,
-`Transmission Type`, -`Transmission Type Description`, -`Transmission type, if other`, -`Number of Gears`,
-`Transmission Lockup Yes/No?`, -`Creeper Gear Yes/No?`, -`Equivalent Test Weight (lbs.)`,
-`Vehicle Fuel Category`, -`Vehicle Fuel Category Description`, -`Test Number`, -`Test Procedure`,
-`Test Fuel`, -`Certification/In-Use Code`, -`Vehicle Class`, -`Certification Region`,
-`Emission Standard Level Code`, -`Upward Diesel Adjustment Factor`, -`Downward Diesel Adjustment Factor`,
-`Reactivity Factor (RAF)`
)
test_filtered_2009_present <- rbind(test_filtered_2009_2013, test_filtered_2014_present)
#View(test_filtered_2009_present)
#write.csv(test_filtered_2009_present, "data/test_filtered_2009_present.csv", row.names = FALSE)
# how many cars are represented in the EPA tests.
test_cars <- test_filtered_2009_present %>%
group_by(`Carline Models Covered`) %>%
summarise(num = n())
test_years <- test_filtered_2009_present %>%
group_by(`Model Year`) %>%
summarise(num = n())
vehicles_filtered <- vehicles_data %>%
filter(year >= 2009) %>%
select(
-city08U, -cityA08U, -comb08U, -combA08U, -cylinders,
-displ, -drive, -highway08U, -highwayA08U, -hlv,
-lv2, -lv4, -pv2, -pv4, -trans_dscr, -trany,
-sCharger, -tCharger, -c240Dscr, -startStop,
-hpv, -id, -mpgData, -range, -rangeCity, -rangeCityA,
-rangeHwy, -rangeHwyA, -rangeA, -mfrCode, -charge240b,
-c240bDscr, -UHighway, -UHighwayA
) %>%
rename(
"Annual petroleum consumption in barrels for main fuel" = barrels08,
"Annual petroleum consumption in barrels for alternate fuel" = barrelsA08,
"Time to charge electric vehicle at 120 V" = charge120,
"Time to charge electric vehicle at 240 V" = charge240,
"City MGP for main fuel" = city08,
"City MPG for alternate fuel" = cityA08,
"City gas comsumption (gallons/100 miles) in charge depleting mode" = cityCD,
"City electricity consumption in kw-hrs/100 miles" = cityE,
"EPA city utility factor for PHEV" = cityUF,
"Tailpipe CO2 in grams/mile for main fuel" = co2,
"Tailpipe CO2 in grams/mile for alternate fuel" = co2A,
"Tailpipe CO2 in grams/mile for alternate fuel (2)" = co2TailpipeAGpm,
"Tailpipe CO2 in grams/mile for main fuel (2)" = co2TailpipeGpm,
"Combined MPG for main fuel" = comb08,
"Combined MPG for alternate fuel" = combA08,
"Combined electricity consumption in kw-hrs/100 miles" = combE,
"Combined gas usage (gal/100 mi) in charge depleting mode" = combinedCD,
"EPa combined utility factor for PHEV" = combinedUF,
"EPA model type index" = engId,
"Engine description" = eng_dscr,
"Electric Motor" = evMotor,
"EPA Fuel Economy Score" = feScore,
"Annual fuel cost for main fuel" = fuelCost08,
"Annual fuel cost for alt fuel" = fuelCostA08,
"Fuel type with main and alternate" = fuelType,
"For dual vehicles, this will be conventional fuel" = fuelType1,
"Alternate fuel type" = fuelType2,
"EPA GHG score" = ghgScore,
"EPA GHG score on alt fuel" = ghgScoreA,
"Highway MPG for main fuel" = highway08,
"Highway MPG for alt fuel" = highwayA08,
"highway gasoline consumption (gallons/100miles) in charge depleting mode" = highwayCD,
"highway electricity consumption in kw-hrs/100 miles" = highwayE,
"EPA highway utility factor (share of electricity) for PHEV" = highwayUF,
"Vehicle operates on gas / electric blend on low charge" = phevBlended,
"City MPG for main fuel" = UCity,
"City MPG for alt fuel" = UCityA,
"EPA Vehicle size class" = VClass,
"Model year" = year,
"Cost savings for gas over 5 years comapred to average car" = youSaveSpend,
"If G or T, this vehicle is subject to gas guzzler tax" = guzzler,
"Type of alt fuel or advanced tech vehicle" = atvType,
"EPA composite gasoline-electricity city MPGe for plug-in hybrid vehicles" = phevCity,
"EPA composite gasoline-electricity combined city-highway MPGe for plug-in hybrid vehicles" = phevComb
)
vehicle_cars <- vehicles_filtered %>%
group_by(model) %>%
summarise(num = n())
vehicle_years <- vehicles_filtered %>%
group_by(`Model year`) %>%
summarise(num = n())
library("dplyr")
library("ggplot2")
library("stringr")
# filtered data set
vehicles_data <- read.csv(unz("data/filtered_datasets.zip", "filtered_datasets/vehicles_filtered.csv"))
# Group data by car manufacturer and calculate average
# MPG for their cars on highway and city
model_mpg <- vehicles_data %>%
group_by(make) %>%
summarise(`Number of Models in Data` = n(),
`Average city MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average highway MPG` = sum(Highway.MPG.for.main.fuel) / n())
# single data frame with only city MPG
city_mpg <- model_mpg %>%
arrange(desc(`Average city MPG`)) %>%
select(make,`Average city MPG`) %>%
top_n(10)
# Single data frame with only highway MPG
highway_mpg <- model_mpg %>%
arrange(desc(`Average highway MPG`)) %>%
select(make,`Average highway MPG`) %>%
top_n(10)
# Create a function to graph City MPG and Highway MPG
plot_mpg <- function(dataset, variable) {
column <- colnames(dataset)
ggplot(data = dataset, aes(x = reorder(dataset[[column[1]]], dataset[[column[2]]]), y = dataset[[column[2]]])) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(dataset[[column[2]]], 1), hjust = -0.2)) +
labs(title = paste("Average", word(column[2], 2),"MPG of Different Car Manufacturers"),
x = "Car Manufacturer", y = paste("Miles Per Gallon on", word(column[2], 2))) +
coord_flip() +
theme_minimal()
}
plot_mpg(highway_mpg)
plot_mpg(city_mpg)
library('dplyr')
library('stringr')
library("ggplot2")
test_df <- read.csv(unz("data/filtered_datasets.zip", "filtered_datasets/test_filtered_2009_present.csv"))
test_df$Represented.Test.Vehicle.Make <- str_to_upper(test_df$Represented.Test.Vehicle.Make)
filter_test_df <- test_df %>%
select(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model, Emission.Name, Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(Rounded.Emission.Result..g.mi., na.rm = TRUE))
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
# filter(num > 20) %>%
arrange(-avg_emission)
# head(10)
select_list <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
arrange(-avg_emission) %>%
pull(Represented.Test.Vehicle.Make)
ggplot(data = summary_info) +
geom_col(mapping = aes(x = reorder(Represented.Test.Vehicle.Make, avg_emission), y = avg_emission)) +
coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
library('dplyr')
library('stringr')
library("ggplot2")
test_df <- read.csv(unz("data/filtered_datasets.zip", "filtered_datasets/test_filtered_2009_present.csv"))
test_df$Represented.Test.Vehicle.Make <- str_to_upper(test_df$Represented.Test.Vehicle.Make)
filter_test_df <- test_df %>%
select(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model, Emission.Name, Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(Rounded.Emission.Result..g.mi., na.rm = TRUE))
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
filter(num > 20) %>%
arrange(-avg_emission)
head(10)
select_list <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
arrange(-avg_emission) %>%
pull(Represented.Test.Vehicle.Make)
ggplot(data = summary_info) +
geom_col(mapping = aes(x = reorder(Represented.Test.Vehicle.Make, avg_emission), y = avg_emission)) +
coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
library('dplyr')
library('stringr')
library("ggplot2")
test_df <- read.csv(unz("data/filtered_datasets.zip", "filtered_datasets/test_filtered_2009_present.csv"))
test_df$Represented.Test.Vehicle.Make <- str_to_upper(test_df$Represented.Test.Vehicle.Make)
filter_test_df <- test_df %>%
select(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model, Emission.Name, Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(Rounded.Emission.Result..g.mi., na.rm = TRUE))
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
filter(num > 20) %>%
arrange(-avg_emission)%>%
head(10)
select_list <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
arrange(-avg_emission) %>%
pull(Represented.Test.Vehicle.Make)
ggplot(data = summary_info) +
geom_col(mapping = aes(x = reorder(Represented.Test.Vehicle.Make, avg_emission), y = avg_emission)) +
coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
library("dplyr")
library("ggplot2")
library("stringr")
# filtered data set
vehicles_data <- read.csv(unz("data/filtered_datasets.zip", "filtered_datasets/vehicles_filtered.csv"))
# Group data by car manufacturer and calculate average
# MPG for their cars on highway and city
model_mpg <- vehicles_data %>%
group_by(make) %>%
summarise(`Number of Models in Data` = n(),
`Average city MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average highway MPG` = sum(Highway.MPG.for.main.fuel) / n())
# single data frame with only city MPG
city_mpg <- model_mpg %>%
arrange(desc(`Average city MPG`)) %>%
select(make,`Average city MPG`) %>%
top_n(10)
# Single data frame with only highway MPG
highway_mpg <- model_mpg %>%
arrange(desc(`Average highway MPG`)) %>%
select(make,`Average highway MPG`) %>%
top_n(10)
# Create a function to graph City MPG and Highway MPG
plot_mpg <- function(dataset, variable) {
column <- colnames(dataset)
ggplot(data = dataset, aes(x = reorder(dataset[[column[1]]], dataset[[column[2]]]), y = dataset[[column[2]]])) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(dataset[[column[2]]], 1), hjust = -0.2)) +
labs(title = paste("Average", word(column[2], 2),"MPG of Different Car Manufacturers"),
x = "Car Manufacturer", y = paste("Miles Per Gallon on", word(column[2], 2))) +
coord_flip() +
theme_minimal()
}
plot_mpg(highway_mpg)
plot_mpg(city_mpg)
library("dplyr")
library("ggplot2")
library("stringr")
library("lintr")
library("plotly")
# filtered data set
vehicles_data <- read.csv(
unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_filtered.csv"), stringsAsFactors = F)
# Group data by car manufacturer and calculate average
# MPG for their cars on highway and city
model_mpg <- vehicles_data %>%
group_by(make) %>%
summarise(`Number of Models in Data` = n(),
`Average city MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average highway MPG` = sum(Highway.MPG.for.main.fuel) / n())
# single data frame with only city MPG
city_mpg <- model_mpg %>%
arrange(desc(`Average city MPG`)) %>%
select(make, `Average city MPG`) %>%
top_n(10)
# Single data frame with only highway MPG
highway_mpg <- model_mpg %>%
arrange(desc(`Average highway MPG`)) %>%
select(make, `Average highway MPG`) %>%
top_n(10)
# Create a function to create interactive
# graph of City MPG and Highway MPG
plot_mpg <- function(dataset, variable) {
column <- colnames(dataset)
plot_ly(
type = "bar",
x = round(dataset[[column[2]]], 1),
y = reorder(dataset[[column[1]]], dataset[[column[2]]]),
marker = list(color = "deepskyblue",
line = list(color = "black", width = 1))) %>%
layout(title = paste("Average", word(column[2], 2),
"MPG of Different Manufacturers"),
xaxis = list(title = paste("Miles Per Gallon driving",
word(column[2], 2))),
yaxis = list(title = "Car Manufacturer"))
}
library("dplyr")
library("stringr")
library("ggplot2")
library("lintr")
# load in filtered data set
test_df <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/test_filtered_2009_present.csv"))
# format column
test_df$Represented.Test.Vehicle.Make <- str_to_upper(
test_df$Represented.Test.Vehicle.Make)
# filter the dataset further
filter_test_df <- test_df %>%
select(Model.Year,
Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model,
Emission.Name,
Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year,
Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(
Rounded.Emission.Result..g.mi., na.rm = TRUE))
# create a summary dataframe from the filtered dataset
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(),
total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE),
avg_emission = total_emissions_emitted / num)
# get the list of all car manufacturers
select_list <- summary_info %>%
pull(Represented.Test.Vehicle.Make)
# create a dataframe for the graph
graph_df <- summary_info %>%
arrange(-avg_emission) %>%
head(10)
# create the graph
emissions <- ggplot(data = graph_df) +
geom_col(mapping = aes(
x = reorder(Represented.Test.Vehicle.Make, avg_emission),
y = avg_emission)) + coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
library("dplyr")
library("stringr")
library("ggplot2")
library("lintr")
# load in filtered data set
test_df <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/test_filtered_2009_present.csv"))
# format column
test_df$Represented.Test.Vehicle.Make <- str_to_upper(
test_df$Represented.Test.Vehicle.Make)
# filter the dataset further
filter_test_df <- test_df %>%
select(Model.Year,
Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model,
Emission.Name,
Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year,
Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(
Rounded.Emission.Result..g.mi., na.rm = TRUE))
# create a summary dataframe from the filtered dataset
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(),
total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE),
avg_emission = total_emissions_emitted / num)
# get the list of all car manufacturers
select_list <- summary_info %>%
pull(Represented.Test.Vehicle.Make)
# create a dataframe for the graph
graph_df <- summary_info %>%
arrange(-avg_emission) %>%
head(10)
# create the graph
emissions <- ggplot(data = graph_df) +
geom_col(mapping = aes(
x = reorder(Represented.Test.Vehicle.Make, avg_emission),
y = avg_emission)) + coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
