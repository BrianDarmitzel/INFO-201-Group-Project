height_in_meters = imperial_to_metric(5, 8)
print(ten)
print(height_in_meters)
add_three <- function(num) {
return (num + 3)
}
ten <- add_three(7)
imperial_to_metric <- function(feet, inches) {
return ((feet * 12 + inches) * 0.0254)
}
height_in_meters <- imperial_to_metric(5, 8)
print(ten)
print(height_in_meters)
print("abc" + 9)
print("abc" + "ad")
print("abc", "ad")
paste("abc", 9)
# filename: example1.R
# Task: Given a temperature in Celcius, compute the temperature in Fahrenheit
# A numeric variable holding temperature in Celcius
temp_in_C <- 20
# Using standard formula, compute temperature in Fahrenheit
temp_in_F <- temp_in_C * 9/5 + 32
# Print the result
print(temp_in_F)
source('C:/Users/risha/Desktop/INFO201/R-lecture-01/R/example1.R')
source('C:/Users/risha/Desktop/INFO201/R-lecture-01/R/example1.R')
source('C:/Users/risha/Desktop/INFO201/R-lecture-01/R/example1.R')
first_score <- 90
install.packages("nycflights13") # once per machine
library("nycflights13")
View(flights)
View(airlines)
View(airports)
library("dplyr")
most_delayed_airport <- flights %>%
group_by(dest) %>%
filter(arr_delay > 0) %>%
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(avg_delay = max(avg_delay, na.rm = TRUE)) %>%
select(dest, avg_delay) %>%
left_join(airports, by = c("dest" = "faa")) %>%
select(dest, name, avg_delay)
most_delayed_airport <- flights %>%
group_by(dest) %>%
filter(arr_delay > 0) %>%
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(avg_delay == max(avg_delay, na.rm = TRUE)) %>%
select(dest, avg_delay) %>%
left_join(airports, by = c("dest" = "faa")) %>%
select(dest, name, avg_delay)
print(most_delayed_airport)
library("dplyr")
library("ggplot2")
library("stringr")
library("lintr")
library("plotly")
# filtered data set
vehicles_data <- read.csv(
unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_filtered.csv"), stringsAsFactors = F)
# Group data by car manufacturer and calculate average
# MPG for their cars on highway and city
fuel_mpg_data <- vehicles_data %>%
group_by(make) %>%
summarise(`Number of Models in Data` = n(),
`Average city MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average highway MPG` = sum(Highway.MPG.for.main.fuel) / n(),
`Combined MPG` = sum(Combined.MPG.for.main.fuel) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.petroleum.consumption.in.barrels.for.main.fuel) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.CO2.in.grams.mile.for.main.fuel..2.) / n(),
`Annual Fuel Cost` = sum(Annual.fuel.cost.for.main.fuel) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.savings.for.gas.over.5.years.comapred.to.average.car) / n())
library("dplyr")
library("ggplot2")
library("stringr")
library("lintr")
library("plotly")
# filtered data set
vehicles_data <- read.csv(
unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_filtered.csv"), stringsAsFactors = F)
library("dplyr")
library("ggplot2")
library("stringr")
library("lintr")
library("plotly")
# filtered data set
vehicles_data <- read.csv(
unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_filtered.csv"), stringsAsFactors = F)
setwd("C:/Users/risha/Desktop/INFO201/INFO-201-Group-Project")
library("dplyr")
library("ggplot2")
library("stringr")
library("lintr")
library("plotly")
# filtered data set
vehicles_data <- read.csv(
unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_filtered.csv"), stringsAsFactors = F)
# Group data by car manufacturer and calculate average
# MPG for their cars on highway and city
fuel_mpg_data <- vehicles_data %>%
group_by(make) %>%
summarise(`Number of Models in Data` = n(),
`Average city MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average highway MPG` = sum(Highway.MPG.for.main.fuel) / n(),
`Combined MPG` = sum(Combined.MPG.for.main.fuel) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.petroleum.consumption.in.barrels.for.main.fuel) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.CO2.in.grams.mile.for.main.fuel..2.) / n(),
`Annual Fuel Cost` = sum(Annual.fuel.cost.for.main.fuel) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.savings.for.gas.over.5.years.comapred.to.average.car) / n())
# single data frame with only city MPG
city_mpg <- model_mpg %>%
arrange(desc(`Average city MPG`)) %>%
select(make, `Average city MPG`) %>%
top_n(20)
# Single data frame with only highway MPG
highway_mpg <- model_mpg %>%
arrange(desc(`Average highway MPG`)) %>%
select(make, `Average highway MPG`) %>%
top_n(20)
# Single data frame with combined MPG
combined_mpg <- model_mpg %>%
arrange(desc(`Combined MPG`)) %>%
select(make, `Combined MPG`) %>%
top_n(20)
# Create a function to create interactive
# graph of City MPG and Highway MPG
plot_mpg <- function(dataset, variable) {
column <- colnames(dataset)
plot_ly(
type = "bar",
x = round(dataset[[column[2]]], 1),
y = reorder(dataset[[column[1]]], dataset[[column[2]]]),
marker = list(color = "deepskyblue",
line = list(color = "black", width = 1))) %>%
layout(title = paste("Average", word(column[2], 2),
"MPG of Different Manufacturers"),
xaxis = list(title = paste("Miles Per Gallon driving",
word(column[2], 2))),
yaxis = list(title = "Car Manufacturer"))
}
indiv_mod <- vehicles_data %>%
group_by(make,model) %>%
summarise(`Number of Models in Data` = n(),
`Average city MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average highway MPG` = sum(Highway.MPG.for.main.fuel) / n(),
`Combined MPG` = sum(Combined.MPG.for.main.fuel) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.petroleum.consumption.in.barrels.for.main.fuel) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.CO2.in.grams.mile.for.main.fuel..2.) / n(),
`Annual Fuel Cost` = sum(Annual.fuel.cost.for.main.fuel) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.savings.for.gas.over.5.years.comapred.to.average.car) / n())
write.csv(indiv_mod, "data/filtered_datasets/vehicles_individual_data.csv",
row.names = FALSE)
library("dplyr")
library("stringr")
library("ggplot2")
library("lintr")
library("stringr")
# load in filtered data set
test_df <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/test_filtered_2009_present.csv"))
# format column
test_df$Represented.Test.Vehicle.Make <- str_to_upper(
test_df$Represented.Test.Vehicle.Make)
# filter the dataset further
filter_test_df <- test_df %>%
select(Model.Year,
Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model,
Emission.Name,
Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year,
Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(
Rounded.Emission.Result..g.mi., na.rm = TRUE))
# create a summary dataframe from the filtered dataset
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(),
total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE),
avg_emission = total_emissions_emitted / num)
# get the list of all car manufacturers
select_list <- summary_info %>%
pull(Represented.Test.Vehicle.Make)
# create a dataframe for the graph
graph_df <- summary_info %>%
arrange(-avg_emission) %>%
head(10)
# create the graph
emissions <- ggplot(data = graph_df) +
geom_col(mapping = aes(
x = reorder(Represented.Test.Vehicle.Make, avg_emission),
y = avg_emission)) + coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
write.csv(filter_test_df, "data/filtered_datasets/emissions_data.csv",
row.names = FALSE)
# filter the dataset further
filter_test_df <- test_df %>%
select(Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model,
Emission.Name,
Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Represented.Test.Vehicle.Make,
Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(
Rounded.Emission.Result..g.mi., na.rm = TRUE))
# create a summary dataframe from the filtered dataset
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(),
total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE),
avg_emission = total_emissions_emitted / num)
# get the list of all car manufacturers
select_list <- summary_info %>%
pull(Represented.Test.Vehicle.Make)
# create a dataframe for the graph
graph_df <- summary_info %>%
arrange(-avg_emission) %>%
head(10)
# create the graph
emissions <- ggplot(data = graph_df) +
geom_col(mapping = aes(
x = reorder(Represented.Test.Vehicle.Make, avg_emission),
y = avg_emission)) + coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
write.csv(filter_test_df, "data/filtered_datasets/emissions_data.csv",
row.names = FALSE)
library("dplyr")
# load in filtered data set
emissions_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/emissions_data.csv"))
fuel_economy_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_individual_data.csv"))
View(emissions_data)
View(fuel_economy_data)
brands1 <- emissions_data %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(average_emission_emitted = sum(Emission_Emitted)/n())
View(brands1)
brands2 <- fuel_economy_data %>%
group_by(make) %>%
summarize(`Average city MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average highway MPG` = sum(Highway.MPG.for.main.fuel) / n(),
`Combined MPG` = sum(Combined.MPG.for.main.fuel) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.petroleum.consumption.in.barrels.for.main.fuel) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.CO2.in.grams.mile.for.main.fuel..2.) / n(),
`Annual Fuel Cost` = sum(Annual.fuel.cost.for.main.fuel) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.savings.for.gas.over.5.years.comapred.to.average.car) / n())
brands2 <- fuel_economy_data %>%
group_by(make) %>%
summarize(`Average city MPG` = sum(Average.city.MPG) / n(),
`Average highway MPG` = sum(Average.highway.MPG) / n(),
`Combined MPG` = sum(Combined.MPG) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.gas.Consumption.in.Barrels) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.Emissions.in.g.mi) / n(),
`Annual Fuel Cost` = sum(Annual.Fuel.Cost) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.Savings.for.Gas.over.5.Years) / n())
View(brands2)
brands2 <- fuel_economy_data %>%
group_by(make) %>%
summarize(`Average city MPG` = sum(Average.city.MPG) / n(),
`Average highway MPG` = sum(Average.highway.MPG) / n(),
`Combined MPG` = sum(Combined.MPG) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.gas.Consumption.in.Barrels) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.Emissions.in.g.mi) / n(),
`Annual Fuel Cost` = sum(Annual.Fuel.Cost) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.Savings.for.Gas.over.5.Years) / n()) %>%
rename('Vehicle Manufacturer' = make)
View(brands2)
brands1 <- emissions_data %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(average_emission_emitted = sum(Emission_Emitted)/n()) %>%
rename('Vehicle Manufacturer' = Represented.Test.Vehicle.Make)
View(brands1)
all_brands <- merge(x=brands1,y=brands2,by="Vehicle Manufacturer")
View(all_brands)
brands2$`Vehicle Manufacturer` <- str_to_upper(
brands2$`Vehicle Manufacturer`)
View(brands2)
all_brands <- merge(x=brands1,y=brands2,by="Vehicle Manufacturer")
View(all_brands)
fuel_economy_data$make <- str_to_upper(
fuel_economy_data$make)
emissions_data <- rename(emissions_data, 'Vehicle Manufacturer' = Represented.Test.Vehicle.Make)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Manufacturer' = make)
library("dplyr")
# load in filtered data set
emissions_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/emissions_data.csv"))
fuel_economy_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_individual_data.csv"))
fuel_economy_data$make <- str_to_upper(
fuel_economy_data$make)
emissions_data <- rename(emissions_data, 'Vehicle Manufacturer' = Represented.Test.Vehicle.Make)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Manufacturer' = make)
brands1 <- emissions_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(average_emission_emitted = sum(Emission_Emitted)/n())
brands2 <- fuel_economy_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(`Average city MPG` = sum(Average.city.MPG) / n(),
`Average highway MPG` = sum(Average.highway.MPG) / n(),
`Combined MPG` = sum(Combined.MPG) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.gas.Consumption.in.Barrels) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.Emissions.in.g.mi) / n(),
`Annual Fuel Cost` = sum(Annual.Fuel.Cost) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.Savings.for.Gas.over.5.Years) / n())
all_brands <- merge(x=brands1,y=brands2,by="Vehicle Manufacturer")
View(emissions_data)
View(fuel_economy_data)
View(brands1)
View(brands2)
View(all_brands)
# rename a few columns
emissions_data <- rename(emissions_data, 'Vehicle Manufacturer' = Represented.Test.Vehicle.Make)
# load in filtered data set
emissions_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/emissions_data.csv"))
fuel_economy_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_individual_data.csv"))
fuel_economy_data$make <- str_to_upper(
fuel_economy_data$make)
# rename a few columns
emissions_data <- rename(emissions_data, 'Vehicle Manufacturer' = Represented.Test.Vehicle.Make)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Manufacturer' = make)
emissions_data <- rename(emissions_data, 'Vehicle Model' = Represented.Test.Vehicle.Model)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Model' = model)
brands1 <- emissions_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(average_emission_emitted = sum(Emission_Emitted)/n())
brands2 <- fuel_economy_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(`Average city MPG` = sum(Average.city.MPG) / n(),
`Average highway MPG` = sum(Average.highway.MPG) / n(),
`Combined MPG` = sum(Combined.MPG) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.gas.Consumption.in.Barrels) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.Emissions.in.g.mi) / n(),
`Annual Fuel Cost` = sum(Annual.Fuel.Cost) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.Savings.for.Gas.over.5.Years) / n())
all_brands <- merge(x=brands1,y=brands2,by="Vehicle Manufacturer")
View(emissions_data)
View(fuel_economy_data)
View(brands1)
View(brands2)
View(all_brands)
all_cars <- merge(x=emissions_data, y=fuel_economy_data, by="Vehicle Manufacturer", "Vehicle Model")
View(all_cars)
# load in filtered data set
emissions_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/emissions_data.csv"))
fuel_economy_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_individual_data.csv"))
library("dplyr")
# load in filtered data set
emissions_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/emissions_data.csv"))
fuel_economy_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_individual_data.csv"))
# convert values to upper case
fuel_economy_data$make <- str_to_upper(
fuel_economy_data$make)
fuel_economy_data$model <- str_to_upper(
fuel_economy_data$model)
emissions_data$Represented.Test.Vehicle.Model <- str_to_upper(
emissions_data$Represented.Test.Vehicle.Model)
# rename a few columns
emissions_data <- rename(emissions_data, 'Vehicle Manufacturer' = Represented.Test.Vehicle.Make)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Manufacturer' = make)
emissions_data <- rename(emissions_data, 'Vehicle Model' = Represented.Test.Vehicle.Model)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Model' = model)
brands1 <- emissions_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(average_emission_emitted = sum(Emission_Emitted)/n())
brands2 <- fuel_economy_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(`Average city MPG` = sum(Average.city.MPG) / n(),
`Average highway MPG` = sum(Average.highway.MPG) / n(),
`Combined MPG` = sum(Combined.MPG) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.gas.Consumption.in.Barrels) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.Emissions.in.g.mi) / n(),
`Annual Fuel Cost` = sum(Annual.Fuel.Cost) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.Savings.for.Gas.over.5.Years) / n())
all_brands <- merge(x=brands1,y=brands2,by="Vehicle Manufacturer")
all_cars <- merge(x=emissions_data, y=fuel_economy_data, by="Vehicle Manufacturer", "Vehicle Model")
View(all_cars)
View(emissions_data)
View(fuel_economy_data)
View(brands1)
View(brands2)
View(all_brands)
all_cars <- merge(x=emissions_data, y=fuel_economy_data, by=c("Vehicle Manufacturer", "Vehicle Model"))
View(all_cars)
write.csv(all_brands, "data/filtered_datasets/combined_car_brands.csv",
row.names = FALSE)
write.csv(all_brands, "data/filtered_datasets/combined_car_brands.csv",
row.names = FALSE)
write.csv(all_cars, "data/filtered_datasets/combined_car_models.csv",
row.names = FALSE)
all_cars <- merge(x=emissions_data, y=fuel_economy_data, by=c("Vehicle Manufacturer", "Vehicle Model")) %>%
select(-Number.of.Models.in.Data)
write.csv(all_cars, "data/filtered_datasets/combined_car_models.csv",
row.names = FALSE)
library("dplyr")
# load in filtered data set
emissions_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/emissions_data.csv"))
fuel_economy_data <- read.csv(unz("data/filtered_datasets.zip",
"filtered_datasets/vehicles_individual_data.csv"))
# convert values to upper case
fuel_economy_data$make <- str_to_upper(
fuel_economy_data$make)
fuel_economy_data$model <- str_to_upper(
fuel_economy_data$model)
emissions_data$Represented.Test.Vehicle.Model <- str_to_upper(
emissions_data$Represented.Test.Vehicle.Model)
# rename a few columns
emissions_data <- rename(emissions_data, 'Vehicle Manufacturer' = Represented.Test.Vehicle.Make)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Manufacturer' = make)
emissions_data <- rename(emissions_data, 'Vehicle Model' = Represented.Test.Vehicle.Model)
fuel_economy_data <- rename(fuel_economy_data, 'Vehicle Model' = model)
brands1 <- emissions_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(average_emission_emitted = sum(Emission_Emitted)/n())
brands2 <- fuel_economy_data %>%
group_by(`Vehicle Manufacturer`) %>%
summarize(`Average city MPG` = sum(Average.city.MPG) / n(),
`Average highway MPG` = sum(Average.highway.MPG) / n(),
`Combined MPG` = sum(Combined.MPG) / n(),
`Annual gas Consumption in Barrels` = sum(Annual.gas.Consumption.in.Barrels) / n(),
`Tailpipe Emissions in g/mi` = sum(Tailpipe.Emissions.in.g.mi) / n(),
`Annual Fuel Cost` = sum(Annual.Fuel.Cost) / n(),
`Cost Savings for Gas over 5 Years` = sum(Cost.Savings.for.Gas.over.5.Years) / n())
all_brands <- merge(x=brands1,y=brands2,by="Vehicle Manufacturer")
all_cars <- merge(x=emissions_data, y=fuel_economy_data, by=c("Vehicle Manufacturer", "Vehicle Model")) %>%
select(-Number.of.Models.in.Data)
# View(emissions_data)
# View(fuel_economy_data)
# View(brands1)
# View(brands2)
# View(all_brands)
# View(all_cars)
# write.csv(all_brands, "data/filtered_datasets/combined_car_brands.csv",
#           row.names = FALSE)
# write.csv(all_cars, "data/filtered_datasets/combined_car_models.csv",
#           row.names = FALSE)
# create UI
my_ui <- fluidPage(
# Title of our project
titlePanel("Green Car Research Project"),
# Create tabs to navigate different sections of our project
tabsetPanel(
type = "tabs", id = "nav_bar",
# Introduction to our project and our research questions
tabPanel("Introduction",
h3("Introduction:"),
p("Nearly 50% of Americans live in areas that don't meet federal air
quality standards. Passenger vehicles are one of the major sources
of air pollution, producing significant amounts of harmful pollutants
such as nitrogen oxides and carbon monoxide. These pollutants
contribute towards serious health related problems."),
p("Our project aims to spread awareness about how much pollutants are
produced by vehicles in America by every major vehicle manufacturing
company. We are using large and reliable datasets for our project
which will enable us to analyze and provide this information. We hope
to persuade people to buy more eco-friendly and fuel efficient
vehicles."),
h3("Research Questions:"),
p("- Which car manufacturer makes the most
'eco-friendly' cars, as in which of these
manufacturere does the least harm to the
environment through their cars?"),
p("- Which car manufacturers make the most
fuel-efficient cars, and can run the furthest
on a single gallon of gasoline?"),
),
# Create a tab which holds our interactive visualizations
tabPanel("Visualizations",
h2("Fuel Economy Visualiztion"),
sidebarLayout(
source("combine_data.R")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(dply)
library(dplyr)
runApp()
runApp()
runApp()
runApp()
runApp()
filtered_table <- all_cars %>%
filter(`Vehicle Manufacturer` == input$car_brand,
`Vehicle Model` == input$car_model)
runApp()
runApp()
