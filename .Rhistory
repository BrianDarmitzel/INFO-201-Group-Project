),
h3("Github Repository")
)
))
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(htmltools)
runApp()
library('dplyr')
library('stringr')
library("ggplot2")
test_df <- read.csv("data/final_datasets/test_filtered_2009_present.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/INFO201/INFO-201-Group-Project")
test_df <- read.csv("data/final_datasets/test_filtered_2009_present.csv", stringsAsFactors = FALSE)
test_df$Represented.Test.Vehicle.Make <- str_to_upper(test_df$Represented.Test.Vehicle.Make)
filter_test_df <- test_df %>%
select(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model, Emission.Name, Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(Rounded.Emission.Result..g.mi., na.rm = TRUE))
View(filter_test_df)
library("dplyr")
library("ggplot2")
# filtered data set
vehicles_data <- read.csv(unz("data/final_datasets.zip", "final_datasets/vehicles_filtered.csv"))
# Group data by car manufacturer and calculate average
# MPG for their cars on highway and city
model_mpg <- vehicles_data %>%
group_by(make) %>%
summarise(`Number of Models in Data` = n(),
`Average City MPG` = sum(City.MGP.for.main.fuel) / n(),
`Average Highway MPG` = sum(Highway.MPG.for.main.fuel) / n())
# single data frame with only city MPG
city_mpg <- model_mpg %>%
arrange(desc(`Average City MPG`)) %>%
select(make,`Average City MPG`) %>%
top_n(10)
# Single data frame with only highway MPG
highway_mpg <- model_mpg %>%
arrange(desc(`Average Highway MPG`)) %>%
select(make,`Average Highway MPG`) %>%
top_n(10)
# Create a graph of City MPG
city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
# Create a graph of Highway MPG
highway_mpg_plot <- ggplot(data = highway_mpg, aes(x = reorder(highway_mpg$make, highway_mpg$`Average Highway MPG`),
y = highway_mpg$`Average Highway MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(highway_mpg$`Average Highway MPG`, 1), hjust = -0.2)) +
labs(title = "Average Highway MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon on Highway") +
coord_flip() +
theme_minimal()
city_mpg_plot
highway_mpg_plot
setwd("~/Desktop/INFO201/INFO-201-Group-Project")
source("vehicles_analysis.r")
View(model_mpg)
runApp()
runApp()
source("vehicles_analysis.r")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library('dplyr')
library('stringr')
library("ggplot2")
setwd("~/Desktop/INFO201/INFO-201-Group-Project")
test_df <- read.csv("data/final_datasets/test_filtered_2009_present.csv", stringsAsFactors = FALSE)
test_df$Represented.Test.Vehicle.Make <- str_to_upper(test_df$Represented.Test.Vehicle.Make)
filter_test_df <- test_df %>%
select(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model, Emission.Name, Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(Rounded.Emission.Result..g.mi., na.rm = TRUE))
View(filter_test_df)
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
filter(num > 20) %>%
arrange(-avg_emission) %>%
head(10)
View(summary_info)
ggplot(data = summary_info) +
geom_col(mapping = aes(x = reorder(Represented.Test.Vehicle.Make, avg_emission), y = avg_emission)) +
coord_flip() +
labs(
title = "Top 10 Polluting Car Manufacturers",
x = "Car Manufacturer",
y = "Average Carbon Monoxide Emitted (g/mi)"
)
View(filter_test_df)
View(summary_info)
View(summary_info)
filter_test_df <- test_df %>%
select(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model, Emission.Name, Rounded.Emission.Result..g.mi., ) %>%
filter(Emission.Name == "CO") %>%
group_by(Model.Year, Represented.Test.Vehicle.Make, Represented.Test.Vehicle.Model) %>%
summarize(Emission_Emitted = max(Rounded.Emission.Result..g.mi., na.rm = TRUE))
View(filter_test_df)
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
# filter(num > 20) %>%
# arrange(-avg_emission) %>%
# head(10)
View(summary_info)
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num)
# filter(num > 20) %>%
# arrange(-avg_emission) %>%
# head(10)
View(summary_info)
runApp()
# Create a graph of City MPG
city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
# Create a graph of City MPG
city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
# Create a graph of Highway MPG
highway_mpg_plot <- ggplot(data = highway_mpg, aes(x = reorder(highway_mpg$make, highway_mpg$`Average Highway MPG`),
y = highway_mpg$`Average Highway MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(highway_mpg$`Average Highway MPG`, 1), hjust = -0.2)) +
labs(title = "Average Highway MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon on Highway") +
coord_flip() +
theme_minimal()
city_mpg_plot
highway_mpg_plot
runApp()
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
# filter(num > 20) %>%
arrange(-avg_emission)
# head(10)
View(summary_info)
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
# filter(num > 20) %>%
arrange(-avg_emission)
# head(10)
View(summary_info)
summary_info <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
# filter(num > 20) %>%
arrange(-avg_emission)
# head(10)
View(summary_info)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('server.r')
setwd("~/Desktop/INFO201/INFO-201-Group-Project/server.r")
runApp()
runApp()
runApp('~/Desktop/INFO201/INFO-201-Group-Project')
runApp('~/Desktop/INFO201/INFO-201-Group-Project')
runApp('~/Desktop/INFO201/INFO-201-Group-Project')
pwd
pwd()
setwd("~/Desktop/INFO201/INFO-201-Group-Project")
setwd("~/Desktop/INFO201/INFO-201-Group-Project/server.r")
runApp()
source("test_results_analysis. R")
source("test_results_analysis. R")
setwd("~/Desktop/INFO201/INFO-201-Group-Project")
source("vehicles_analysis.r")
source("test_results_analysis. R")
source("test_results_analysis.R")
ui <- fluidPage(
titlePanel(
"Green car research application"),
tabsetPanel(
type = "tabs", id = "nav_bar",
tabPanel(
"Introduction"
),
tabPanel(
"categories",
radioButtons("MPG",
inputId = "variable",
label = h3("Car's MPG"),
choices = list("City MPG" = plotOutput(city_mpg_plot),
"Highway MPG" = plotOutput(highway_mpg_plot)),
selected = city_mpg_plot),
HTML("<h3>The plot will show here</h3>")),
tabPanel("Search",
sidebarLayout(
sidebarPanel(
selectInput(
label = h3("Search the vihecle category")
),
mainPanel(
"plots will go here"
)
)
),
tabPanel("About",
h3("Purpose"),
tags$div(
"the description will go here"),
h3("Contact"),
tags$div(
"Brian Darmitzel, Rishabh Goyal, Xiying Huang",
tags$br(),
"INFO-201A: Techinical Foudations for Informatics (Autumn, 2019)",
tags$br(),
"The Information School",
tags$br(),
"University of Washington",
tags$br(),
tags$i("November 18, 2019")
),
h3("Github Repository"),
tags$pre(tags$a(href = "https://github.com/BrianDarmitzel/INFO-201-Group-Project",
"https://github.com/BrianDarmitzel/INFO-201-Group-Project"))
)
)))
ui <- fluidPage(
titlePanel(
"Green car research application"),
tabsetPanel(
type = "tabs", id = "nav_bar",
tabPanel(
"Introduction"
),
tabPanel(
"categories",
radioButtons("MPG",
inputId = "variable",
label = h3("Car's MPG"),
choices = list("City MPG" = plotOutput(city_mpg_plot),
"Highway MPG" = plotOutput(highway_mpg_plot)),
selected = city_mpg_plot),
HTML("<h3>The plot will show here</h3>")),
tabPanel("Search",
sidebarLayout(
sidebarPanel(
selectInput(
label = h3("Search the vihecle category")
),
mainPanel(
"plots will go here"
)
)
),
tabPanel("About",
h3("Purpose"),
tags$div(
"the description will go here"),
h3("Contact"),
tags$div(
"Brian Darmitzel, Rishabh Goyal, Xiying Huang",
tags$br(),
"INFO-201A: Techinical Foudations for Informatics (Autumn, 2019)",
tags$br(),
"The Information School",
tags$br(),
"University of Washington",
tags$br(),
tags$i("November 18, 2019")
),
h3("Github Repository"),
tags$pre(tags$a(href = "https://github.com/BrianDarmitzel/INFO-201-Group-Project",
"https://github.com/BrianDarmitzel/INFO-201-Group-Project"))
)
)))
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::deployApp(getwd())
select_list <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
arrange(-avg_emission)
pull(Represented.Test.Vehicle.Make)
print(select_list)
select_list <- filter_test_df %>%
group_by(Represented.Test.Vehicle.Make) %>%
summarize(num = n(), total_emissions_emitted = sum(Emission_Emitted, na.rm = TRUE), avg_emission = total_emissions_emitted/num) %>%
arrange(-avg_emission) %>%
pull(Represented.Test.Vehicle.Make)
print(select_list)
runApp()
# Create a graph of City MPG
city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
# Create a graph of Highway MPG
highway_mpg_plot <- ggplot(data = highway_mpg, aes(x = reorder(highway_mpg$make, highway_mpg$`Average Highway MPG`),
y = highway_mpg$`Average Highway MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(highway_mpg$`Average Highway MPG`, 1), hjust = -0.2)) +
labs(title = "Average Highway MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon on Highway") +
coord_flip() +
theme_minimal()
city_mpg_plot
highway_mpg_plot
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(htmltools)
runApp()
runApp()
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
output$plot1city <- renderPlot({city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
})
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
output$plot1city <- renderPlot({city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
})
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
output$plot1city <- renderPlot({city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
})
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
output$plot1city <- renderPlot({city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
})
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
output$plot1city <- renderPlot({city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
})
server <- function(input, output) {
output$intro <- renderUI({"Our project aims to spread awareness regarding the rising air pollution
due to harmful pollutants emitted by motor vehicles. Reducing pollutants in the air is important
for human health and the environment. By showing which cars are the most eco-friendly and fuel
efficient, we hope to influence people's decision into buying cars which do the least harm to the environment."
})
runApp()
runApp()
shinyApp(ui = ui, server = server)
runApp()
runApp()
>
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
city_mpg_plot
# Create a graph of City MPG
city_mpg_plot <- ggplot(data = city_mpg, aes(x = reorder(city_mpg$make, city_mpg$`Average City MPG`),
y = city_mpg$`Average City MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(city_mpg$`Average City MPG`, 1), hjust = -0.2)) +
labs(title = "Average City MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon in City") +
coord_flip() +
theme_minimal()
# Create a graph of Highway MPG
highway_mpg_plot <- ggplot(data = highway_mpg, aes(x = reorder(highway_mpg$make, highway_mpg$`Average Highway MPG`),
y = highway_mpg$`Average Highway MPG`)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = round(highway_mpg$`Average Highway MPG`, 1), hjust = -0.2)) +
labs(title = "Average Highway MPG of Different Car Manufacturers",
x = "Car Manufacturer", y = "Miles Per Gallon on Highway") +
coord_flip() +
theme_minimal()
city_mpg_plot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
